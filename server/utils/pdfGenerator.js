import PDFDocument from "pdfkit";

export const generatePdfStream = (reportData, res) => {
  const { filename, score, totalIssues, vulnerabilities, createdAt } = reportData;

  const doc = new PDFDocument({ margin: 50 });

  // Pipe directly to the HTTP response
  doc.pipe(res);

  // Branding and Report Content
  doc
    .fontSize(24)
    .fillColor("#1E40AF")
    .text("VULYX", { align: "center" });

  doc
    .fontSize(16)
    .fillColor("black")
    .text("🛡️ Vulnerability Scan Report", { align: "center" });

  doc.moveDown();

  doc.fontSize(12).text(`Filename: ${filename}`);
  doc.text(`Score: ${score}%`);
  doc.text(`Total Issues: ${totalIssues}`);
  doc.text(`Scanned At: ${new Date(createdAt).toLocaleString()}`);
  doc.moveDown();

  doc.fontSize(14).text("Vulnerabilities:", { underline: true });
  doc.moveDown();

  if (vulnerabilities.length === 0) {
    doc.text("✅ No vulnerabilities found.");
  } else {
    vulnerabilities.forEach((vuln, index) => {
      doc.fontSize(12).text(`${index + 1}. Line: ${vuln.line}`);
      doc.text(`   Issue: ${vuln.issue}`);
      doc.text(`   Suggestion: ${vuln.suggestion}`);
      doc.moveDown();
    });
  }

  doc.moveDown(3);
  doc
    .fontSize(10)
    .fillColor("gray")
    .text("Generated by VULYX — Automated Code Vulnerability Scanner", { align: "center" });
  doc.text("https://vulyx.com", { align: "center", link: "https://vulyx.com" });

  doc.end();
};
